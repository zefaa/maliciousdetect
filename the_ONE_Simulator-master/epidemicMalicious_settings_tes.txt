## Default settings for the simulation### Scenario settingsScenario.name = epidemicMalicious_tesScenario.simulateConnections = trueScenario.updateInterval = 0.5# 43200s == 12hScenario.endTime = 43200## Interface-specific settings:# type : which interface class the interface belongs to# For different types, the sub-parameters are interface-specific# For SimpleBroadcastInterface, the parameters are:# transmitSpeed : transmit speed of the interface (bytes per second) # transmitRange : range of the interface (meters)# "Bluetooth" interface for all nodesbtInterface.type = SimpleBroadcastInterface# Transmit speed of 2 Mbps = 250kBpsbtInterface.transmitSpeed = 200MbtInterface.transmitRange = 150# High speed, long range, interface for group 4highspeedInterface.type = SimpleBroadcastInterfacehighspeedInterface.transmitSpeed = 1000MhighspeedInterface.transmitRange = 150# Define 6 different node groupsScenario.nrofHostGroups = 6## Group-specific settings:# groupID : Group's identifier. Used as the prefix of host names# nrofHosts: number of hosts in the group# movementModel: movement model of the hosts (valid class name from movement package)# waitTime: minimum and maximum wait times (seconds) after reaching destination# speed: minimum and maximum speeds (m/s) when moving on a path# bufferSize: size of the message buffer (bytes)# router: router used to route messages (valid class name from routing package)# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite## Group and movement model specific settings# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )#       for ShortestPathMapBasedMovement# okMaps : which map nodes are OK for the group (map file indexes), default=all #          for all MapBasedMovent models# routeFile: route's file path - for MapRouteMovement# routeType: route's type - for MapRouteMovement# Common settings for all groupsGroup.movementModel = RandomWaypoint#Group.router = EpidemicRouterGroup.router = DecisionEngineRouterMaliciousDecisionEngineRouter.decisionEngine = Malicious_Tes #DecisionEngineRouter.decisionEngine = EpidemicTestMal#DecisionEngineRouter.filePathKnowledge = externalCommunityRandom.txtGroup.bufferSize = 2000MGroup.waitTime = 0, 20000# All nodes have the bluetooth interfaceGroup.nrofInterfaces = 1Group.interface1 = btInterface# Walking speedsGroup.speed = 1, 1# Message TTL of 300 minutes (5 hours)Group.msgTtl = 43200Group1.nrofHosts = 20Group2.nrofHosts = 10Group3.nrofHosts = 60Group4.nrofHosts = 10Group5.nrofHosts = 30Group6.nrofHosts = 20Group1.groupID = pGroup2.groupID = cGroup3.groupID = malGroup4.groupID = malGroup5.groupID = tGroup6.groupID = t## Message creation parameters # How many event generatorsEvents.nrof = 1# Class of the first event generatorEvents1.class = MessageEventGeneratorMal# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)Events1.interval = 25,35# Message sizes (500kB - 1MB)Events1.size = 100k# range of message source/destination addressesEvents1.hosts = 0,125# Message ID prefixEvents1.prefix = M#pangkat pesan Events1.rankMessage = 3 ## Movement model settings# seed for movement models' pseudo random number generator (default = 0)MovementModel.rngSeed = 1# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 4500, 3400# How long time to move hosts in the world before real simulationMovementModel.warmup = 1000## Map based movement -movement model specific settings#MapBasedMovement.nrofMapFiles = 4#MapBasedMovement.mapFile1 = data/roads.wkt#MapBasedMovement.mapFile2 = data/main_roads.wkt#MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt#MapBasedMovement.mapFile4 = data/shops.wkt## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 2# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)Report.reportDir = reports/# Report classes to loadReport.report1 = MessageStatsReport#Report.report2 = NodeMaliciousReportsReport.report2 = CreatedMessagesReportReport.report3 = ReportMaliciousCreatedMessage## Default settings for some routers settings#ProphetRouter.secondsInTimeUnit = 30#SprayAndWaitRouter.nrofCopies = 6#SprayAndWaitRouter.binaryMode = true## Optimization settings -- these affect the speed of the simulation## see World class for details.Optimization.cellSizeMult = 5Optimization.randomizeUpdateOrder = true## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$